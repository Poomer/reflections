//How did viewing a diff between two versions of a file help you see the bug that was introduced?

Instead of manually searching for bugs in thousands of lines in each file, it helps you identify differences between two files and quickly locate where they are in both files.


//How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

With this function, you can choose any functions of any  version that give you the best functionalities of your program, and combine each of them together.

//What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?


manually create a commit:
pros:  - Know where you update/make changes on the program/file

cons: - you may forget to save changes with logial purpose, or create a too-big-too-small commit situation.

Automatically save:

pros: - Always save versions even though you forget to do so.

cons: - if spending several hours fixing the same bug, the committed files are likely similar (too cluttered)

//Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Google Dos is more general-purpose, while Git tends to be designed for coding purpose.


//How can you use the commands git log and git diff to view the history of files?

git log is to view all versions of the file previously created. This is to locate all changes we have done. git diff is then used when comparing two distinct versions to locate where exactly the code was modified.